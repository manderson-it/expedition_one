---
- name: Create Google Cloud Platform instance
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Create a disk
      gcp_compute_disk:
        name: 'disk-instance'
        size_gb: 20
        source_image: 'projects/rhel-cloud/global/images/family/rhel-8'
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: disk

    - name: Create a network
      gcp_compute_network:
        name: 'network-instance'
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: network

    - name: Create a firewall rule to allow SSH from anywhere
      gcp_compute_firewall:
        name: allow-ssh
        allowed:
          - ip_protocol: tcp
            ports: 22
        network: "{{ network }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present

    - name: Create an address
      gcp_compute_address:
        name: 'address-instance'
        region:  "{{ region }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
        state: present
      register: address

    - name: Create instances
      gcp_compute_instance:
        state: present
        name: test-vm
        machine_type: "{{ machine_type }}"
        disks:
          - auto_delete: true
            boot: true
            source: "{{ disk }}"
        network_interfaces:
          - network: "{{ network }}"
            access_configs:
              - name: 'External NAT'
                nat_ip: "{{ address }}"
                type: 'ONE_TO_ONE_NAT'
        zone: "{{ zone }}"
        project: "{{ gcp_project }}"
        auth_kind: "{{ gcp_cred_kind }}"
        service_account_file: "{{ gcp_cred_file }}"
      register: instance

    - name: Wait for SSH to come up
      wait_for: host={{ address.address }} port=22 delay=10 timeout=180
